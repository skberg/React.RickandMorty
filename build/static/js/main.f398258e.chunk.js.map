{"version":3,"sources":["hoc/Aux.js","components/Layout/Layout.js","components/App/App.js","serviceWorker.js","components/CharacterCard/CharacterCard.js","containers/characterSearch/SuchComp.js","containers/CharacterCards/CardsPage/CardsPage.js","containers/CharacterCards/CardPage/CardPage.js","index.js"],"names":["aux","props","children","layout","react_default","a","createElement","Aux","className","href","NavLink","to","src","style","margin","display","width","App","Layout_Layout","this","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","characterCard","linkButton","showLink","Link","pathname","id","name","tilt_default","options","max","image","data-tilt","species","status","gender","origin","SearchBar","SearchInput","React","createRef","placeholder","ref","onChange","searchValue","current","onSearchTerm","value","CardsPage","reickMorty","characterCards","getdata","fetch","response","json","data","_this","setState","results","Object","toConsumableArray","handleSearch","searchTerm","filterCharacterCard","Term","character","filter","toLowerCase","includes","trim","characters","length","map","CharacterCard_CharacterCard","key","class","Fragment","characterSearch_SuchComp","CardPage","getCharacterData","concat","params","ReactDOM","render","BrowserRouter","components_App_App","Route","exact","path","component","document","getElementById","URL","process","addEventListener","headers","Service-Worker","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f398258e.chunk.js","sourcesContent":["const aux = props => props.children;\nexport default aux;","import React from 'react';\nimport './Layout.css';\nimport Aux from '../../hoc/Aux';\nimport {NavLink} from 'react-router-dom';\nconst layout = props => (\n\t<Aux>\n\t\t<nav className=\"navbar navbar-light \">\n\t\t\t<a className=\"navbar-brand\" href=\"/\">Rick & Morty</a>\n\n\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<NavLink to=\"/\" className=\"nav-link\">Characters</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t\t<header>\n\t\t\t<img src=\"https://i2.wp.com/www.pixelcrumb.com/wp-content/uploads/2016/10/RICK-AND-MORTY-BANNER.jpg?fit=1920%2C720\n\" style={{margin:'0px auto', display:'block', width:'100%' }}/>\n\n\n\t\t</header>\n\t\t\n\t\t<div className=\"container\">\n\t\t\t{props.children}\n\t\t</div>\n\t</Aux>\n)\n\n\nexport default layout;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Layout from '../../components/Layout/Layout';\n\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Layout >\n\t\t\t\t{this.props.children}\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Tilt from 'react-tilt';\nimport './CharacterCard.css';\n\nconst characterCard = (props) => {\n  \n  let linkButton = null\n  if (props.showLink) {\n   linkButton = <Link to={{ pathname: '/character/' + props.id }}className=\"button-text\" >view</Link>;\n  }\n  \n  return <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.name}</h5>\n      \n            <Tilt className=\"Tilt\" options={{ max : 25 }}  >\n                <div className=\"Tilt-inner\"> \n                <div  className=\"Card-img\"> <img className=\"img\" src={props.image}  data-tilt></img><br/></div>\n                  </div>\n                </Tilt>\n            <hr />\n            <div className=\"card-list\">\n            <b>Specifes: </b> {props.species}<br/>\n            <b>Status:</b> {props.status}<br/>\n            <b>Gender:</b> {props.gender}<br/>\n            <b>Location:</b> {props.location}<br/>\n            <b>Place of origin:</b> {props.origin}<br/>\n            </div>\n            <hr />\n            \n            <div className=\"button\">{linkButton} </div>\n           \n         \n\n   </div>\n        \n}\nexport default characterCard;","import React from 'react';\nimport \"./SuchComp.css\";\n\nconst SearchBar = (props)=> {    \n    \n    const SearchInput = React.createRef();\n    \n    const handleSearch = () => {\n        const searchValue = SearchInput.current;\n            props.onSearchTerm(searchValue.value)\n    }\n\n    return(\n    \n        <div className=\"search\">\n            <input\n                className=\"form-control\"\n                placeholder=\"Search for a character \" \n                ref={ SearchInput }\n                onChange = { handleSearch }    \n            />\n        </div>\n    )\n}\n\nexport default SearchBar","import React from \"react\";\nimport CharacterCard from '../../../components/CharacterCard/CharacterCard';\nimport SearchBar from '../../characterSearch/SuchComp';\nimport \"./CardsPage.css\"\nclass CardsPage extends React.Component{\n\n\n    state = { \n        reickMorty:[],\n        characterCards:[]\n    }\n\n\n   getdata = () => {\n       fetch('https://rickandmortyapi.com/api/character/')\n       .then(response => response.json()) \n        .then( data =>{ \n            this.setState({\n                reickMorty: data.results,\n                characterCards: [...data.results]\n            })\n            })\n     \n   }\n   \n\n   componentDidMount (){\n       this.getdata();\n   }\n\n   handleSearch = (searchTerm) => {\n       this.filterCharacterCard(searchTerm);\n   }\n   filterCharacterCard = (Term)=>{\n    const character = this.state.reickMorty.filter(character =>\n        character.name.toLowerCase().includes(Term.trim().toLowerCase()));\n\n        this.setState({\n            characterCards: character\n        });\n   }\n    render(){\n\n        let characters = null;\n        if (this.state.characterCards.length > 0){\n            characters = this.state.characterCards.map(character =>(\n                <CharacterCard\n\n                    key={character.id}\n                    id={character.id}\n                    image={character.image}\n                    name={character.name}\n                    species={character.species}\n                    status={character.status}\n                    gender={character.gender}\n                    location={character.location.name}\n                    origin={character.origin.name}\n                    showLink={true}>\n                </CharacterCard>\n            ));\n        }\n        else{\n            characters =  <div class=\"lds-hourglass\"></div>\n        }\n\n\n\n        return(\n            <React.Fragment>\n                <h2 className=\"heding\">CharacterCard </h2>\n\n               <SearchBar onSearchTerm={this.handleSearch}/>\n                        <div className='row'>\n                        {characters}\n                        </div>\n                        \n                        \n\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport default CardsPage;\n","import React from 'react';\nimport CharacterCard from '../../../components/CharacterCard/CharacterCard';\nimport './Cardpage.css';\nclass CardPage extends React.Component{\n    state = {\n        character:{}\n    }\n    componentDidMount(){\n        this.getCharacterData()\n    }\n\n\n    getCharacterData = () => {\n        fetch(`https://rickandmortyapi.com/api/character/${this.props.match.params.id}`)\n        .then(response => response.json()) \n        .then( data => {\n            this.setState({\n                character: data\n            })\n         })\n        \n    }\n    render(){\n        let characterCard = null;\n        if(this.state.character.id){\n            characterCard =(<CharacterCard\n                    key={this.state.character.id}\n                    id={this.state.character.id}\n                    image={this.state.character.image}\n                    name={this.state.character.name}\n                    species={this.state.character.species}\n                    status={this.state.character.status}\n                    gender={this.state.character.gender}\n                    location={this.state.character.location.name}\n                    origin={this.state.character.origin.name}\n                    showLink={true}>\n\n\n            </CharacterCard>)\n        }\n        else{\n            characterCard =<p>Loding...</p>\n        }\n\n\n\n        return(\n\n            <React.Fragment>\n            <h1 className=\"hedign\">{this.state.character.name}</h1>\n            <div className=\"cardelement\">{characterCard} </div>\n      \n            </React.Fragment>\n\n        )\n    }\n}\nexport default CardPage;","import {BrowserRouter,Route} from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport CardsPage from './containers/CharacterCards/CardsPage/CardsPage'\nimport CardPage from './containers/CharacterCards/CardPage/CardPage';\n\nReactDOM.render(\n<BrowserRouter>\n<App>\n    <Route exact path=\"/\" component={CardsPage}></Route>\n    <Route path=\"/character/:id\" component={CardPage}></Route>\n</App>\n</BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n\n\n\n"],"sourceRoot":""}